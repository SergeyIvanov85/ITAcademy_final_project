(()=>{"use strict";var t={879:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Marble=void 0;const a=i(640);class r{constructor({color:t="#ff2244"}){this.ID=`${Math.floor(1e9*Math.random()).toString(16).toLocaleUpperCase()}`,this.DOM=(0,a.createDiv)(["marble"]),this.Color=t,this.DOM.style.backgroundColor=this.Color,this.DOM.style.width=`${r.Size}px`,this.DOM.style.height=`${r.Size}px`}setPosition(t,e){return this.x=t,this.y=e,this}overlap(t){return r.Size-Math.sqrt(Math.pow(this.x-t.x,2)+Math.pow(this.y-t.y,2))}}e.Marble=r,r.Size=60},808:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Player=void 0;const a=i(640);e.Player=class{constructor({x:t=0,y:e=0}){this.Marble=(0,a.createDiv)(["marble-1"]),this.NextMarbleList=[(0,a.createDiv)(["marble-2"]),(0,a.createDiv)(["marble-2"]),(0,a.createDiv)(["marble-2"])],this.DOM=(0,a.createDiv)(["player"],[this.Marble,...this.NextMarbleList]),this.rotate=0,this.X=t,this.Y=e,this.DOM.style.transform=`translate(calc(${this.X}px - 50%), calc(${this.Y}px - 50%)) rotate(0deg)`}lookAt(t,e){if(!this.parent)return this;const i=this.DOM.getBoundingClientRect(),a=i.left+(i.right-i.left)/2,r=i.top+(i.bottom-i.top)/2;return this.lookAtVector(t-a,e-r)}lookAtVector(t,e){return this.rotate=180*Math.atan2(e,t)/Math.PI+90,this.DOM.style.transform=`translate(calc(${this.X}px - 50%), calc(${this.Y}px - 50%)) rotate(${this.rotate}deg)`,this}appendTo(t){return this.parent=t,this.parent.appendChild(this.DOM),this}setMarbleColor(t){return this.Marble.style.backgroundColor=t,this}setNextMarbleColor(t){return this.NextMarbleList.forEach((e=>{e.style.backgroundColor=t})),this}getVector(){const t=this.rotate-90;return{x:30*Math.cos(t*Math.PI/180),y:30*Math.sin(t*Math.PI/180)}}}},968:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Zuma=void 0;const a=i(640),r=i(808),s=i(879);class o{constructor(t){this.AllMarbleLength=100,this.InitMarbleLength=20,this.Canvas=document.createElement("canvas"),this.Container=(0,a.createDiv)(["container"],[this.Canvas,(0,a.createDiv)(["leaf","leaf-01"]),(0,a.createDiv)(["leaf","leaf-02"]),(0,a.createDiv)(["leaf","leaf-03"]),(0,a.createDiv)(["leaf","leaf-04"]),(0,a.createDiv)(["leaf","leaf-05"]),(0,a.createDiv)(["leaf","leaf-06"])]),this.Path=(0,a.createElement)("path",{}),this.moveSpeed=3,this.autoAddMarbleCount=0,this.marbleDataList=[],this.marbleBoomList=[],this.marbleColorCount={},this.moveTimes=0,this.isStart=!1,this._isInit=!1,this._isFinal=!1,this.checkDeleteAfterTouchData={},this.playerMarble={now:null,next:null},this._score=0,this.width=t.width,this.height=t.height,(0,a.createElement)("svg",{x:"0px",y:"0px",width:`${t.width}px`,height:`${t.height}px`,viewBox:`0 0 ${t.width} ${t.height}`}).appendChild(this.Path),this.Path.setAttributeNS(null,"d",t.path),this.PathLength=this.Path.getTotalLength();const e=this.Path.getPointAtLength(0),i=this.Path.getPointAtLength(this.PathLength),s=(0,a.createDiv)(["start-hole"]),l=(0,a.createDiv)(["final-hole"]);s.style.left=`${e.x}px`,s.style.top=`${e.y}px`,l.style.left=`${i.x}px`,l.style.top=`${i.y}px`,this.Container.appendChild(s),this.Container.appendChild(l),this.Canvas.width=t.width*window.devicePixelRatio,this.Canvas.height=t.height*window.devicePixelRatio,this.Container.style.width=`${t.width}px`,this.Container.style.height=`${t.height}px`,this.Container.style.transform=`scale(${t.scale||1})`,this.Player=new r.Player(t.playerPos),this.Player.appendTo(this.Container),this.colorList=[...o.DefaultColorList],this.colorList.forEach((t=>{this.marbleColorCount[t]=0})),this.updateScore=t.updateScore,this.updateFinal=t.updateFinal}get isInit(){return this._isInit}set isFinal(t){this._isFinal=t,this.updateFinal&&this.updateFinal(this._isFinal)}get isFinal(){return this._isFinal}set score(t){this._score=t,this.updateScore&&this.updateScore(this._score)}get score(){return this._score}start(){return this.isStart=!0,this.time=(new Date).getTime(),this.animation(),this}stop(){return this.isStart=!1,this}reset(){return this.isStart=!1,this._isInit=!1,this.isFinal=!1,this.autoAddMarbleCount=0,this.score=0,this.moveSpeed=4,this.colorList=[...o.DefaultColorList],this.marbleDataList.length=0,this.marbleBoomList.length=0,this.checkDeleteAfterTouchData={},this.playerMarble.now=null,this.playerMarble.next=null,this.Player.setMarbleColor("").setNextMarbleColor(""),Object.keys(this.marbleColorCount).forEach((t=>{this.marbleColorCount[t]=0})),this}setScale(t){return this.Container.style.transform=`scale(${t||1})`,this}appendTo(t){return this.parent=t,this.parent.appendChild(this.Container),this}switchMarble(){return this.isStart&&!this.isFinal&&this.isInit?(this.Player&&this.playerMarble.now&&this.playerMarble.next&&([this.playerMarble.now,this.playerMarble.next]=[this.playerMarble.next,this.playerMarble.now],this.Player.setMarbleColor(this.playerMarble.now.Color).setNextMarbleColor(this.playerMarble.next.Color)),this):this}attack(){if(!this.isStart||this.isFinal||!this.isInit||!this.Player||!this.playerMarble.now||!this.playerMarble.next)return this;const t=this.Player.getVector();return this.marbleBoomList.push({marble:this.playerMarble.now,speed:t}),this.playerMarble.now.setPosition(this.Player.X,this.Player.Y),this.playerMarble.now=this.playerMarble.next,this.playerMarble.next=this.createMarble(),this.Player.setMarbleColor(this.playerMarble.now.Color).setNextMarbleColor(this.playerMarble.next.Color),this}lookAt(t,e){return this.Player?(this.Player.lookAt(t,e),this):this}init(){const t=(new Date).getTime();return this.marbleDataList.length>=this.InitMarbleLength&&this.isStart?(this._isInit=!0,this.moveSpeed=30,this.moveTimes=this.moveSpeed,this.playerMarble.now=this.createMarble(),this.playerMarble.next=this.createMarble(),this.Player.setMarbleColor(this.playerMarble.now.Color).setNextMarbleColor(this.playerMarble.next.Color),this):(t-this.time<4*a.OneFrameTime||(this.time=t,this.unshiftMarble()),this)}moveMoveMarbleData(){const t=this.marbleDataList[0];if(!t)return;t.percent>=.99&&(this.score-=1,this.removeMarbleFromDataList(t.marble));const e=s.Marble.Size/this.moveSpeed;t.percent+=e/this.PathLength;const i=this.Path.getPointAtLength(t.percent*this.PathLength);t.marble.setPosition(i.x,i.y);let a=t;const r=[];for(let t=1;t<this.marbleDataList.length;t++){const e=this.marbleDataList[t];if(e.percent>=.99){this.score-=1,this.removeMarbleFromDataList(e.marble,t);continue}const i=a.marble.overlap(e.marble);if(i>0||a.percent>e.percent){if(this.checkDeleteAfterTouchData[e.marble.ID]&&(delete this.checkDeleteAfterTouchData[e.marble.ID],e.marble.Color===a.marble.Color)){const t=this.getNeerSameMarble(e.marble);t.length>=3&&r.push(...t)}a.percent>e.percent?e.percent=a.percent+s.Marble.Size/this.PathLength:e.percent+=i/this.PathLength}else if(i<-5&&e.percent>a.percent){i<-s.Marble.Size&&(this.checkDeleteAfterTouchData[e.marble.ID]=!0);const t=s.Marble.Size/this.moveSpeed*4;e.percent-=t/this.PathLength}const o=this.Path.getPointAtLength(e.percent*this.PathLength);e.marble.setPosition(o.x,o.y),a=e}r.forEach((t=>{this.score+=3,this.removeMarbleFromDataList(t)}))}moveMoveMarbleBoom(){if(!this.marbleBoomList.length)return;const t=this.marbleDataList,e=[];this.marbleBoomList.forEach((i=>{i.marble.setPosition(i.marble.x+i.speed.x,i.marble.y+i.speed.y);for(let a=0;a<t.length;a++){const r=t[a];if(i.marble.overlap(r.marble)>5){if(i.marble.Color===r.marble.Color){const t=this.getNeerSameMarble(r.marble);if(t.length>=2)return this.score+=t.length,t.forEach((t=>{this.removeMarbleFromDataList(t)})),void e.push(Object.assign(Object.assign({},i),{isMove:!1}))}return this.addMarbleToNeer(i.marble,r),void e.push(Object.assign(Object.assign({},i),{isMove:!0}))}}(Math.abs(i.marble.x)>this.width||Math.abs(i.marble.y)>this.height)&&e.push(Object.assign(Object.assign({},i),{isMove:!1}))})),e.forEach((t=>{const e=this.marbleBoomList.findIndex((e=>e.marble.ID===t.marble.ID));this.marbleBoomList.splice(e,1),t.isMove||this.marbleColorCount[t.marble.Color]--}))}removeMarbleFromDataList(t,e=this.marbleDataList.findIndex((e=>e.marble.ID===t.ID))){return delete this.checkDeleteAfterTouchData[t.ID],this.marbleDataList.splice(e,1),this.marbleColorCount[t.Color]--,this}addMarbleToNeer(t,e){const i=this.marbleDataList.findIndex((t=>t.marble.ID===e.marble.ID)),a=s.Marble.Size/this.PathLength,r=this.Path.getPointAtLength((e.percent-a)*this.PathLength),o=this.Path.getPointAtLength((e.percent+a)*this.PathLength);return Math.pow(r.x-t.x,2)+Math.pow(r.y-t.y,2)<Math.pow(o.x-t.x,2)+Math.pow(o.y-t.y,2)?this.marbleDataList.splice(i,0,{marble:t,percent:e.percent-a/2}):this.marbleDataList.splice(i+1,0,{marble:t,percent:e.percent+a/2}),this}createMarble(){const t=new s.Marble({color:this.getColor()});return this.marbleColorCount[t.Color]++,t}unshiftMarble(){const t=this.createMarble();return this.marbleDataList.unshift({marble:t,percent:0}),this.autoAddMarbleCount++,this}getColor(){const t=Math.floor(Math.random()*this.colorList.length),e=this.colorList[t];return this.marbleColorCount[e]||1===this.colorList.length||!this.isInit?e:(this.colorList.splice(t,1),this.getColor())}getNeerSameMarble(t){let e;const i=this.marbleDataList.findIndex((e=>e.marble.ID===t.ID)),a=[t];e=t;for(let t=i+1;t<this.marbleDataList.length;t++){const i=this.marbleDataList[t].marble;if(!(i.Color===e.Color&&i.overlap(e)>s.Marble.Size/-10))break;e=i,a.push(i)}e=t;for(let t=i-1;t>=0;t--){const i=this.marbleDataList[t].marble;if(!(i.Color===e.Color&&i.overlap(e)>s.Marble.Size/-10))break;e=i,a.push(i)}return a}drawCanvas(){const t=this.Canvas.getContext("2d"),e=s.Marble.Size/2*window.devicePixelRatio,i=2*Math.PI;t.clearRect(0,0,this.Canvas.width,this.Canvas.height),this.marbleDataList.forEach((a=>{t.beginPath(),t.fillStyle=a.marble.Color,t.arc(a.marble.x*window.devicePixelRatio,a.marble.y*window.devicePixelRatio,e,0,i),t.closePath(),t.fill()})),this.marbleBoomList.forEach((a=>{t.beginPath(),t.fillStyle=a.marble.Color,t.arc(a.marble.x*window.devicePixelRatio,a.marble.y*window.devicePixelRatio,e,0,i),t.closePath(),t.fill()}))}animation(){if(!this.isStart)return;if(requestAnimationFrame((()=>this.animation())),!this.isInit)return this.init().moveMoveMarbleData(),void this.drawCanvas();const t=(new Date).getTime();t-this.time<a.OneFrameTime||(this.time=t,this.moveTimes===this.moveSpeed&&this.autoAddMarbleCount<this.AllMarbleLength&&(this.unshiftMarble(),this.moveTimes=0),this.moveMoveMarbleBoom(),this.moveMoveMarbleData(),this.drawCanvas(),this.moveTimes++,0===this.marbleDataList.length&&(this.isFinal=!0))}}e.Zuma=o,o.DefaultColorList=["#0C3406","#077187","#74A57F","#ABD8CE","#E4C5AF","#ED1111","#11EDE2"]},640:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createElement=e.createDiv=e.OneFrameTime=void 0,e.OneFrameTime=17,e.createDiv=(t,e=[])=>{const i=document.createElement("div");return i.classList.add(...t),e.forEach((t=>{i.appendChild(t)})),i},e.createElement=(t,e)=>{const i=document.createElementNS("http://www.w3.org/2000/svg",t);return Object.keys(e).forEach((t=>{i.setAttributeNS(null,t,e[t])})),i}},352:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.ZumaView=void 0;const a=i(968);e.ZumaView=class{startZumaGame(){window.onload=()=>{const t=document.body.querySelector("#score"),e=document.body.querySelector("#start-popup"),i=document.body.querySelector("#stop-popup"),r=document.body.querySelector("#final-popup"),s=document.body.querySelector("#final-score"),o=new a.Zuma({width:1200,height:800,scale:.7,path:"M197.519,19.289C158.282,84.171,101.52,201.053,92.5,345.418c-6.6,105.632,47,236.043,159,295.679\n\t\ts338.566,101.881,547,64.404c199-35.781,312.016-164.676,313-266c1-103-34-221.816-200-278.044\n\t\tc-142.542-48.282-346.846-37.455-471,31.044c-116,64-154.263,213.533-81,304.619c92,114.381,410,116.381,476,2.891\n\t\tc62.975-108.289-40-203.51-158-206.51",playerPos:{x:550,y:400},updateScore:e=>{t.innerHTML=`${e}`,localStorage.setItem("player",String(e))},updateFinal:t=>{t&&(r.classList.add("active"),s.innerHTML=`${o.score}`)}});o.appendTo(document.body),window.addEventListener("keydown",(t=>{"Escape"===t.code&&o.isInit&&(o.stop(),i.classList.add("active"))})),window.addEventListener("keydown",(t=>{(o||"Space"===t.code)&&(t.preventDefault(),o.switchMarble())})),window.addEventListener("mousemove",(t=>{o&&o.lookAt(t.pageX,t.pageY)})),window.addEventListener("click",(()=>{o.attack()})),e.querySelector("#init-btn").addEventListener("click",(()=>{e.classList.remove("active"),o.start()})),i.querySelector("#start-btn").addEventListener("click",(()=>{i.classList.remove("active"),setTimeout((()=>{o.start()}),100)})),i.querySelector("#reset-btn").addEventListener("click",(()=>{i.classList.remove("active"),o.reset().start()})),r.querySelector("#restart-btn").addEventListener("click",(()=>{r.classList.remove("active"),o.reset().start()}));const l=()=>{o.setScale(Math.min(window.innerHeight/o.height,window.innerWidth/o.width,1))};window.addEventListener("resize",l),l(),window.addEventListener("blur",(function(){o.isInit&&!o.isFinal&&(o.stop(),i.classList.add("active"))}))}}}}},e={};(new(function i(a){var r=e[a];if(void 0!==r)return r.exports;var s=e[a]={exports:{}};return t[a](s,s.exports,i),s.exports}(352).ZumaView)).startZumaGame()})();